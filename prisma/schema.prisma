generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  cep       String
  profile   Bytes
  token     String?
  createdAt DateTime @default(now())

  clientFavorite ClientFavorite[]
  sales          Sales[]
  location       Location[]

  @@map("clients")
}

model Location {
  id        String   @id @default(uuid())
  name      String
  lat       Decimal
  long      Decimal
  reference String?
  createdAt DateTime @default(now())

  client   Client? @relation(fields: [clientId], references: [id])
  clientId String?

  @@map("locations")
}

model Seller {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  cep       String
  profile   Bytes
  token     String?
  createdAt DateTime @default(now())

  clientFavorite ClientFavorite[]
  sales          Sales[]
  paymentMethods PaymentMethod[]

  @@map("sellers")
}

model ClientFavorite {
  id       String @id @default(uuid())
  client   Client @relation(fields: [clientId], references: [id])
  clientId String
  seller   Seller @relation(fields: [sellerId], references: [id])
  sellerId String

  @@index([clientId])
  @@index([sellerId])
  @@map("client_favorites")
}

model Sales {
  id         String   @id @default(uuid())
  seller     Seller   @relation(fields: [sellerId], references: [id])
  sellerId   String
  client     Client   @relation(fields: [clientId], references: [id])
  clientId   String
  value      Decimal
  isComplete Boolean  @default(false)
  createdAt  DateTime @default(now())

  @@index([sellerId])
  @@index([clientId])
  @@map("sales")
}

model PaymentMethod {
  id       String      @id @default(uuid())
  type     PaymentType
  value    Decimal
  seller   Seller      @relation(fields: [sellerId], references: [id])
  sellerId String

  @@map("payment_methods")
}

enum PaymentType {
  CARD
  CASH
  PIX
}
